[project]
name = "ai-telegram-bot"
version = "0.1.0"
description = "Default template for PDM package"
authors = [
    {name = "nikmosi", email = "i@nikmosi.ru"},
    {name = "*8_a.k_8", email = "kinglook1998@gmail.com"}
]
dependencies = [
    "aiogram>=3.15.0",
    "g4f[openai]>=0.3.7.1",
    "pydantic-settings>=2.6.1",
    "aiohttp-socks>=0.9.1",
    "loguru>=0.7.2",
    "SpeechRecognition>=3.11.0",
    "ffmpeg-python>=0.2.0",
    "sqlalchemy[asyncio]>=2.0.36",
    "asyncpg>=0.30.0",
    "alembic>=1.14.0",
    "fluent-runtime>=0.4.0",
    "fluent-syntax>=0.19.0",
    "redis>=5.2.0",
]
requires-python = "==3.12.*"
readme = "README.md"
license = {text = "MIT"}


[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-timeout>=2.3.1",
    "mypy>=1.13.0",
    "loguru-mypy>=0.0.4",
    "pre-commit>=4.0.1",
    "ruff>=0.8.0",
]


[tool.pdm]
distribution = false


[tool.pdm.scripts]
test = "pytest"
lint = "pre-commit run --all-files"
mypy = "mypy --strict ."
up = "docker compose up --force-recreate --build"
rev = "alembic revision --autogenerate"


[tool.mypy]
explicit_package_bases = true
mypy_path = "src"
ignore_missing_imports = true
python_version = "3.12"
strict = true
namespace_packages = true
exclude = "tests/.*"


[tool.pytest.ini_options]
pythonpath = [
  "src"
]


[tool.ruff]
src = ["src", "test"]
line-length = 88
indent-width = 4
target-version = "py312"
fix = true

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]


[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.pyright]
typeCheckingMode = "strict"
include = ["src"]
